# Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values
# do not exceed four million, find the sum of the even-valued terms

# Solution: 4613732

def sum(l):
    sum = 0
    for n in l:
        sum += n
    return sum

def fib(n):        
    fibs = [1, 2]
    nextFib = 3
    while (nextFib < n):
        fibs.append(nextFib)
        nextFib = sum(fibs[-2:])
    return fibs

def evens(l):
    evens = []   
    for i in l:
        if not(i % 2):
            evens.append(i)
    return evens

def main():
    fibsUnder4M = fib(4000000)
    evenFibsUnder4M = evens(fibsUnder4M)
    
    print(fibsUnder4M)
    print(evenFibsUnder4M)
    print(sum(evenFibsUnder4M))

main()